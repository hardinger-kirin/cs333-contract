import os

# formats text to colors
class text_colors:
    RED = '\033[91m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    WHITE = '\033[97m'
    BLUE = '\033[94m'
    END = '\033[0m'

# displays a given string in a given color
def color_print(string, color):
    if color == 'r':
        color = text_colors.RED
    elif color == 'g':
        color = text_colors.GREEN
    elif color == 'y':
        color = text_colors.YELLOW
    elif color == 'b':
        color = text_colors.BLUE
    else:
        color = text_colors.WHITE
    
    print(color + string + text_colors.END)

def sanitize_input_string():
    # checks if string has any non-alphabetic characters
    string = input()
    if string is not None:
        if string.isalpha():
            return string
        else:
            color_print("Please enter only alphabetical characters.", 'r')
            return False

def cat():
    print('⠀⠀⠀⠀⠀⠀⠀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⠀⠀⢰⡏⢙⡙⠻⣶⣤⣴⠶⠶⠛⠚⠚⠳⠶⠶⢶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⠀⢀⣿⠠⣯⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠳⢦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⠀⢸⣷⠾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢶⣄⢀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⢀⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⡄⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⣾⡡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣻⣦⠄⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⣸⠇⠁⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠉⠙⠳⢦⣄⠀⠀⠀')                            
    print('⠀⠀⣰⠟  ⠈⠙⣷⣦⡤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⡑⠢⣄⠙⢷⣄')
    print('⢀⢱⡟  ⠀⠀   ⠁       ⠀⠀⢤⣤⣤⠴⡀⠀⠀⠀⠀⠀⠀⠀⠀ ⠰⡳⠀⠈⢳⣀⢻⡆')
    print('⠘⢸⠃⠀⠀⠁⣉⣉⠀⠀⠀⠈⠉⠙⠦⠒ ⠀⠀   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠴⠚⣉⡴⠟⠀')
    print('⠀⢸⣇⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⣉⣉⠈⠁⠀    ⠀⠀⠀⠀⠀⠀⠀⠀⣤⣶⠟⠉⠀⠀⠀')
    print('⠀⠀⠻⣮⡢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀⠀⠀⠀⢤⣿⠨⠀⠀⠀⠀')
    print('⠀⠀⠀⢨⡻⢦⣍⣒⡠⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⢎⣼⠃⠀⠀⠀⠀⠀')
    print('⠀⠀⣠⠏⠙⠢⢤⣉⣛⠛⠶⠶⢤⣤⣤⣄⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⣡⡾⠃⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠉⠙⡷⠶⠦⣄⣠⣄⠉⡁⢀⣀⣀⣈⠉⠉⣉⠉⠛⣛⡦⠀⠀⢀⣦⣆⣖⣲⣬⣵⠾⠋⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⣧⢀⡀⠤⠄⠈⠉⠈⠉⠀⠉⠈⢑⣊⠉⠉⢹⠏⠀⠀⠀⢀⠉⠉⢉⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⣿⠠⢤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⣾⢰⡗⠀⠀⢸⡆⠀⠈⢣⠈⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⢻⠀⠀⠀⠀⠈⠉⠉⠉⠁⠀⠀⠀⠀⠀⢀⡏⢸⡇⠀⠀⢸⡇⠀⠀⠈⢣⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⢸⡆⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⢸⣇⡀⡀⣼⢁⠀⠀⠀⠈⡇⠈⣿⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⠘⡇⠀⣷⣧⡀⠀⢀⣼⣄⠀⣤⡄⠀⠀⣸⠁⠀⠛⠶⠾⠋⠁⠀⠀⠀⠀⣹⠀⢹⣇⢀⣀⣴⠶⢶⡆⠀')
    print('⠀⠀⠀⠀⠀⣿⠀⣹⡷⣿⣿⢼⣿⠟⢰⣿⡟⠈⣖⣿⣠⡦⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⢀⣾⠉⠉⠉⠀⢈⣾⠇⠀')
    print('⠀⠀⠀⠀⠀⢸⡆⢿⣿⡏⠁⢿⣿⡷⠸⣿⣷⡾⠫⠉⠀⠀⠀⠀⠀⠀⠀⢀⢠⠖⢁⣠⣾⣥⣤⠤⠶⠞⠋⠁⠀⠀')
    print('⠀⠀⠀⠀⠀⠀⠛⠚⠛⠓⠷⠶⠿⠷⠶⠿⠟⠿⣮⣍⣉⣰⣨⣍⣭⣭⣥⠷⠶⠞⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')     

def intro():
    # Trust the process    
    print('⠀⠀⠀⠀⠀⠀⠀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⠀⠀⢰⡏⢙⡙⠻⣶⣤⣴⠶⠶⠛⠚⠚⠳⠶⠶⢶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⠀⢀⣿⠠⣯⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠛⠳⢦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⠀⢸⣷⠾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢶⣄⢀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⢀⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢷⡄⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⣾⡡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣻⣦⠄⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⣸⠇⠁⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠉⠙⠳⢦⣄⠀⠀⠀     ___ .   __       __   __   __          ___          ___   /')                            
    print('⠀⠀⣰⠟  ⠈⠙⣷⣦⡤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⡑⠢⣄⠙⢷⣄⠀   |  |  \' /__`      |__) /  \ |__)  /\      |  |  |\/| |__   /')
    print('⢀⢱⡟  ⠀⠀   ⠁       ⠀⠀⢤⣤⣤⠴⡀⠀⠀⠀⠀⠀⠀⠀⠀ ⠰⡳⠀⠈⢳⣀⢻⡆   |  |    .__/      |__) \__/ |__) /~~\     |  |  |  | |___ .')
    print('⠘⢸⠃⠀⠀⠁⣉⣉⠀⠀⠀⠈⠉⠙⠦⠒ ⠀⠀   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠴⠚⣉⡴⠟⠀')
    print('⠀⢸⣇⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⣉⣉⠈⠁⠀    ⠀⠀⠀⠀⠀⠀⠀⠀⣤⣶⠟⠉⠀⠀⠀')
    print('⠀⠀⠻⣮⡢⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀⠀⠀⠀⢤⣿⠨⠀⠀⠀⠀')
    print('⠀⠀⠀⢨⡻⢦⣍⣒⡠⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⢎⣼⠃⠀⠀⠀⠀⠀')
    print('⠀⠀⣠⠏⠙⠢⢤⣉⣛⠛⠶⠶⢤⣤⣤⣄⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⣡⡾⠃⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠉⠙⡷⠶⠦⣄⣠⣄⠉⡁⢀⣀⣀⣈⠉⠉⣉⠉⠛⣛⡦⠀⠀⢀⣦⣆⣖⣲⣬⣵⠾⠋⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⣧⢀⡀⠤⠄⠈⠉⠈⠉⠀⠉⠈⢑⣊⠉⠉⢹⠏⠀⠀⠀⢀⠉⠉⢉⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⣿⠠⢤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠒⣾⢰⡗⠀⠀⢸⡆⠀⠈⢣⠈⢷⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⢻⠀⠀⠀⠀⠈⠉⠉⠉⠁⠀⠀⠀⠀⠀⢀⡏⢸⡇⠀⠀⢸⡇⠀⠀⠈⢣⠀⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⢸⡆⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⢸⣇⡀⡀⣼⢁⠀⠀⠀⠈⡇⠈⣿⠀⠀⠀⠀⠀⠀⠀⠀')
    print('⠀⠀⠀⠀⠘⡇⠀⣷⣧⡀⠀⢀⣼⣄⠀⣤⡄⠀⠀⣸⠁⠀⠛⠶⠾⠋⠁⠀⠀⠀⠀⣹⠀⢹⣇⢀⣀⣴⠶⢶⡆⠀')
    print('⠀⠀⠀⠀⠀⣿⠀⣹⡷⣿⣿⢼⣿⠟⢰⣿⡟⠈⣖⣿⣠⡦⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⢀⣾⠉⠉⠉⠀⢈⣾⠇⠀')
    print('⠀⠀⠀⠀⠀⢸⡆⢿⣿⡏⠁⢿⣿⡷⠸⣿⣷⡾⠫⠉⠀⠀⠀⠀⠀⠀⠀⢀⢠⠖⢁⣠⣾⣥⣤⠤⠶⠞⠋⠁⠀⠀')
    print('⠀⠀⠀⠀⠀⠀⠛⠚⠛⠓⠷⠶⠿⠷⠶⠿⠟⠿⣮⣍⣉⣰⣨⣍⣭⣭⣥⠷⠶⠞⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀')     

    # only move on if "enter" is pressed
    while True:
        color_print("Press enter to begin.", 'g')
        inp = input()
        if(not inp):
            break
    
    # clear screen
    os.system('cls' if os.name == 'nt' else 'clear')